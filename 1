#Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции вводятся пользователем. После выполнения вычисления программа не завершается, а запрашивает новые данные для вычислений. Завершение программы должно выполняться при вводе символа '0' в качестве знака операции. Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), программа должна сообщать об ошибке и снова запрашивать знак операции. Также она должна сообщать пользователю о невозможности деления на ноль, если он ввел его в качестве делителя.
print(" 0 завершит работу программы")
while True:
  nuvarber = input("Введите +,-,*,/: ")
  if nuvarber == '0': 
      break
  if nuvarber in ('+','-','*','/'):
    x = float(input("x="))
    y = float(input("y="))
    if nuvarber == '+':
      print("%.2f" % (x+y))
    elif nuvarber == '-':
      print("%.2f" % (x-y))
    elif nuvarber == '*':
      print("%.2f" % (x*y))
    elif nuvarber == '/':
      if y != 0:
        print("%.2f" % (x/y))
      else:
        print("Деление на 0")
  else:    
    print("Неверный знак операции")


#Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, в нем 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
nuvarber = int()
nuvarber = input()
even = 0
odd = 0
while nuvarber > 0:
    if nuvarber % 2 == 0:
        even += 1
    else:
        odd += 1
    nuvarber = nuvarber // 10

print("Even: %d") % even)
print("Odd: %d" % odd)

#Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например, если введено число 3486, надо вывести 6843.
num = int(input())
var = 0 
while num > 0:
    var = var * 10 + num % 10
    num = num // 10
print(var)

#Найти сумму n элементов следующего ряда чисел: 1, -0.5, 0.25, -0.125,… Количество элементов (n) вводится с клавиатуры.
num = int(input())
var = 1
sum = 0
for i in range(num):
    sum += var
    var /= -2
print(sum)

#Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно. Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.
for i in range(32,127):
    print("%4d-%s" % (i,chr(i)), end='')
    if i%10 == 0:
        print()
 
print()